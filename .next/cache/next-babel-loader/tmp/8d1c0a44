{"ast":null,"code":"import axios from 'axios';\nimport absoluteUrl from 'next-absolute-url';\nimport { ALL_ROOMS_SUCCESS, ALL_ROOMS_FAIL, ROOM_DETAILS_SUCCESS, ROOM_DETAILS_FAIL, NEW_REVIEW_REQUEST, NEW_REVIEW_SUCCESS, NEW_REVIEW_FAIL, REVIEW_AVAILABILITY_REQUEST, REVIEW_AVAILABILITY_SUCCESS, REVIEW_AVAILABILITY_FAIL, ADMIN_ROOMS_REQUEST, ADMIN_ROOMS_SUCCESS, ADMIN_ROOMS_FAIL, NEW_ROOM_REQUEST, NEW_ROOM_SUCCESS, NEW_ROOM_FAIL, UPDATE_ROOM_REQUEST, UPDATE_ROOM_SUCCESS, UPDATE_ROOM_FAIL, DELETE_ROOM_REQUEST, DELETE_ROOM_SUCCESS, DELETE_ROOM_FAIL, GET_REVIEWS_REQUEST, GET_REVIEWS_SUCCESS, GET_REVIEWS_FAIL, DELETE_REVIEW_REQUEST, DELETE_REVIEW_SUCCESS, DELETE_REVIEW_RESET, DELETE_REVIEW_FAIL, CLEAR_ERRORS } from '../constants/roomConstants'; // Get all rooms\n\nexport const getRooms = (req, currentPage = 1, location = '', guests, category) => async dispatch => {\n  try {\n    const {\n      origin\n    } = absoluteUrl(req);\n    let link = `${origin}/api/rooms?page=${currentPage}&location=${location}`;\n    if (guests) link = link.concat(`&guestCapacity=${guests}`);\n    if (category) link = link.concat(`&category=${category}`);\n    const {\n      data\n    } = await axios.get(link);\n    dispatch({\n      type: ALL_ROOMS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_ROOMS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Get room details\n\nexport const getRoomDetails = (req, id) => async dispatch => {\n  try {\n    const {\n      origin\n    } = absoluteUrl(req);\n    let url;\n\n    if (req) {\n      url = `${origin}/api/rooms/${id}`;\n    } else {\n      url = `/api/rooms/${id}`;\n    }\n\n    const {\n      data\n    } = await axios.get(url);\n    dispatch({\n      type: ROOM_DETAILS_SUCCESS,\n      payload: data.room\n    });\n  } catch (error) {\n    dispatch({\n      type: ROOM_DETAILS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Get all rooms - ADMIN\n\nexport const getAdminRooms = () => async dispatch => {\n  try {\n    dispatch({\n      type: ADMIN_ROOMS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/admin/rooms`);\n    dispatch({\n      type: ADMIN_ROOMS_SUCCESS,\n      payload: data.rooms\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: ADMIN_ROOMS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const newRoom = roomData => async dispatch => {\n  try {\n    dispatch({\n      type: NEW_ROOM_REQUEST\n    });\n    const config = {\n      header: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/rooms`, roomData, config);\n    dispatch({\n      type: NEW_ROOM_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_ROOM_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const updateRoom = (id, roomData) => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_ROOM_REQUEST\n    });\n    const config = {\n      header: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/rooms/${id}`, roomData, config);\n    dispatch({\n      type: UPDATE_ROOM_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_ROOM_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const deleteRoom = id => async dispatch => {\n  try {\n    dispatch({\n      type: DELETE_ROOM_REQUEST\n    });\n    const {\n      data\n    } = await axios.delete(`/api/rooms/${id}`);\n    dispatch({\n      type: DELETE_ROOM_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_ROOM_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const newReview = reviewData => async dispatch => {\n  try {\n    dispatch({\n      type: NEW_REVIEW_REQUEST\n    });\n    const config = {\n      header: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/reviews`, reviewData, config);\n    dispatch({\n      type: NEW_REVIEW_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_REVIEW_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const checkReviewAvailability = roomId => async dispatch => {\n  try {\n    dispatch({\n      type: REVIEW_AVAILABILITY_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/reviews/check_review_availability?roomId=${roomId}`);\n    dispatch({\n      type: REVIEW_AVAILABILITY_SUCCESS,\n      payload: data.isReviewAvailable\n    });\n  } catch (error) {\n    dispatch({\n      type: REVIEW_AVAILABILITY_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const getRoomReviews = id => async dispatch => {\n  try {\n    dispatch({\n      type: GET_REVIEWS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/reviews/?id=${id}`);\n    dispatch({\n      type: GET_REVIEWS_SUCCESS,\n      payload: data.reviews\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_REVIEWS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const deleteReview = (id, roomId) => async dispatch => {\n  try {\n    dispatch({\n      type: DELETE_REVIEW_REQUEST\n    });\n    const {\n      data\n    } = await axios.delete(`/api/reviews/?id=${id}&roomId=${roomId}`);\n    dispatch({\n      type: DELETE_REVIEW_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_REVIEW_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Clear Errors\n\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":null,"metadata":{},"sourceType":"module"}