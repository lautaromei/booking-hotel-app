{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport Image from 'next/image';\nimport RoomFeatures from './RoomFeatures';\nimport NewReview from '../review/NewReview';\nimport ListReviews from '../review/ListReviews';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Carousel } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { clearErrors } from '../../redux/actions/roomActions';\nimport { checkBooking, getBookedDates } from '../../redux/actions/bookingActions';\nimport { CHECK_BOOKING_RESET } from '../../redux/constants/bookingConstants';\nimport getStripe from '../../utils/getStripe';\nimport axios from 'axios';\n\nconst RoomDetails = () => {\n  const {\n    0: checkInDate,\n    1: setCheckInDate\n  } = useState();\n  const {\n    0: checkOutDate,\n    1: setCheckOutDate\n  } = useState();\n  const {\n    0: daysOfStay,\n    1: setDaysOfStay\n  } = useState();\n  const {\n    0: paymentLoading,\n    1: setPaymentLoading\n  } = useState(false);\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    dates\n  } = useSelector(state => state.bookedDates);\n  const {\n    user\n  } = useSelector(state => state.loadedUser);\n  const {\n    room,\n    error\n  } = useSelector(state => state.roomDetails);\n  const {\n    available,\n    loading: bookingLoading\n  } = useSelector(state => state.checkBooking);\n  const excludedDates = [];\n  dates.forEach(date => {\n    excludedDates.push(new Date(date));\n  });\n\n  const onChange = dates => {\n    const [checkInDate, checkOutDate] = dates;\n    setCheckInDate(checkInDate);\n    setCheckOutDate(checkOutDate);\n\n    if (checkInDate && checkOutDate) {\n      // Calclate days of stay\n      const days = Math.floor((new Date(checkOutDate) - new Date(checkInDate)) / 86400000 + 1);\n      setDaysOfStay(days);\n      dispatch(checkBooking(id, checkInDate.toISOString(), checkOutDate.toISOString()));\n    }\n  };\n\n  const {\n    id\n  } = router.query;\n\n  const newBookingHandler = async () => {\n    const bookingData = {\n      room: router.query.id,\n      checkInDate,\n      checkOutDate,\n      daysOfStay,\n      amountPaid: 90,\n      paymentInfo: {\n        id: 'STRIPE_PAYMENT_ID',\n        status: 'STRIPE_PAYMENT_STATUS'\n      }\n    };\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const {\n        data\n      } = await axios.post('/api/bookings', bookingData, config);\n      console.log(data);\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n\n  const bookRoom = async (id, pricePerNight) => {\n    setPaymentLoading(true);\n    const amount = pricePerNight * daysOfStay;\n\n    try {\n      const link = `/api/checkout_session/${id}?checkInDate=${checkInDate.toISOString()}&checkOutDate=${checkOutDate.toISOString()}&daysOfStay=${daysOfStay}`;\n      const {\n        data\n      } = await axios.get(link, {\n        params: {\n          amount\n        }\n      });\n      const stripe = await getStripe(); // Redirect to checkout\n\n      stripe.redirectToCheckout({\n        sessionId: data.id\n      });\n      setPaymentLoading(false);\n    } catch (error) {\n      setPaymentLoading(false);\n      console.log(error);\n      toast.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    dispatch(getBookedDates(id));\n    toast.error(error);\n    dispatch(clearErrors());\n    return () => {\n      dispatch({\n        type: CHECK_BOOKING_RESET\n      });\n    };\n  }, [dispatch, id]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsxs(\"title\", {\n        children: [room.name, \" - BookIT\"]\n      })\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"container container-fluid\",\n      children: [/*#__PURE__*/_jsx(\"h2\", {\n        className: \"mt-5\",\n        children: room.name\n      }), /*#__PURE__*/_jsx(\"p\", {\n        children: room.address\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"ratings mt-auto mb-3\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"rating-outer\",\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: \"rating-inner\",\n            style: {\n              width: `${room.ratings / 5 * 100}%`\n            }\n          })\n        }), /*#__PURE__*/_jsxs(\"span\", {\n          id: \"no_of_reviews\",\n          children: [\"(\", room.numOfReviews, \" Reviews)\"]\n        })]\n      }), /*#__PURE__*/_jsx(Carousel, {\n        hover: \"pause\",\n        children: room.images && room.images.map(image => /*#__PURE__*/_jsx(Carousel.Item, {\n          children: /*#__PURE__*/_jsx(\"div\", {\n            style: {\n              width: '100%',\n              height: '440px'\n            },\n            children: /*#__PURE__*/_jsx(Image, {\n              className: \"d-block m-auto\",\n              src: image.url,\n              alt: room.name,\n              layout: \"fill\"\n            })\n          })\n        }, image.public_id))\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"row my-5\",\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"col-12 col-md-6 col-lg-8\",\n          children: [/*#__PURE__*/_jsx(\"h3\", {\n            children: \"Description\"\n          }), /*#__PURE__*/_jsx(\"p\", {\n            children: room.description\n          }), /*#__PURE__*/_jsx(RoomFeatures, {\n            room: room\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"col-12 col-md-6 col-lg-4\",\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: \"booking-card shadow-lg p-4\",\n            children: [/*#__PURE__*/_jsxs(\"p\", {\n              className: \"price-per-night\",\n              children: [/*#__PURE__*/_jsxs(\"b\", {\n                children: [\"$\", room.pricePerNight]\n              }), \" / night\"]\n            }), /*#__PURE__*/_jsx(\"hr\", {}), /*#__PURE__*/_jsx(\"p\", {\n              className: \"mt-5 mb-3\",\n              children: \"Pick Check In & Check Out Date\"\n            }), /*#__PURE__*/_jsx(DatePicker, {\n              className: \"w-100\",\n              selected: checkInDate,\n              onChange: onChange,\n              startDate: checkInDate,\n              endDate: checkOutDate,\n              minDate: new Date(),\n              excludeDates: excludedDates,\n              selectsRange: true,\n              inline: true\n            }), available === true && /*#__PURE__*/_jsx(\"div\", {\n              className: \"alert alert-success my-3 font-weight-bold\",\n              children: \"Room is available. Book now.\"\n            }), available === false && /*#__PURE__*/_jsx(\"div\", {\n              className: \"alert alert-danger my-3 font-weight-bold\",\n              children: \"Room not available. Try different dates.\"\n            }), available && !user && /*#__PURE__*/_jsx(\"div\", {\n              className: \"alert alert-danger my-3 font-weight-bold\",\n              children: \"Login to book room.\"\n            }), available && user && /*#__PURE__*/_jsxs(\"button\", {\n              className: \"btn btn-block py-3 booking-btn\",\n              onClick: () => bookRoom(room._id, room.pricePerNight),\n              disabled: bookingLoading || paymentLoading ? true : false,\n              children: [\"Pay - $\", daysOfStay * room.pricePerNight]\n            })]\n          })\n        })]\n      }), /*#__PURE__*/_jsx(NewReview, {}), room.reviews && room.reviews.length > 0 ? /*#__PURE__*/_jsx(ListReviews, {\n        reviews: room.reviews\n      }) : /*#__PURE__*/_jsx(\"p\", {\n        children: /*#__PURE__*/_jsx(\"b\", {\n          children: \"No Reviews on this room\"\n        })\n      })]\n    })]\n  });\n};\n\nexport default RoomDetails;","map":null,"metadata":{},"sourceType":"module"}