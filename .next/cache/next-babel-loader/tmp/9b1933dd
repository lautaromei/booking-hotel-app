{"ast":null,"code":"import axios from 'axios';\nimport absoluteUrl from 'next-absolute-url';\nimport { CHECK_BOOKING_REQUEST, CHECK_BOOKING_SUCCESS, CHECK_BOOKING_FAIL, BOOKED_DATES_SUCCESS, BOOKED_DATES_FAIL, MY_BOOKINGS_SUCCESS, MY_BOOKINGS_FAIL, BOOKING_DETAILS_SUCCESS, BOOKING_DETAILS_FAIL, ADMIN_BOOKINGS_REQUEST, ADMIN_BOOKINGS_SUCCESS, ADMIN_BOOKINGS_FAIL, DELETE_BOOKING_REQUEST, DELETE_BOOKING_SUCCESS, DELETE_BOOKING_FAIL, CLEAR_ERRORS } from '../constants/bookingConstants';\nexport const checkBooking = (roomId, checkInDate, checkOutDate) => async dispatch => {\n  try {\n    dispatch({\n      type: CHECK_BOOKING_REQUEST\n    });\n    let link = `/api/bookings/check?roomId=${roomId}&checkInDate=${checkInDate}&checkOutDate=${checkOutDate}`;\n    const {\n      data\n    } = await axios.get(link);\n    dispatch({\n      type: CHECK_BOOKING_SUCCESS,\n      payload: data.isAvailable\n    });\n  } catch (error) {\n    dispatch({\n      type: CHECK_BOOKING_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const getBookedDates = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.get(`/api/bookings/check_booked_dates?roomId=${id}`);\n    dispatch({\n      type: BOOKED_DATES_SUCCESS,\n      payload: data.bookedDates\n    });\n  } catch (error) {\n    dispatch({\n      type: BOOKED_DATES_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const myBookings = (authCookie, req) => async dispatch => {\n  try {\n    const {\n      origin\n    } = absoluteUrl(req);\n    const config = {\n      headers: {\n        cookie: authCookie\n      }\n    };\n    const {\n      data\n    } = await axios.get(`${origin}/api/bookings/me`, config);\n    dispatch({\n      type: MY_BOOKINGS_SUCCESS,\n      payload: data.bookings\n    });\n  } catch (error) {\n    dispatch({\n      type: MY_BOOKINGS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const getAdminBookings = () => async dispatch => {\n  try {\n    dispatch({\n      type: ADMIN_BOOKINGS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/admin/bookings`);\n    dispatch({\n      type: ADMIN_BOOKINGS_SUCCESS,\n      payload: data.bookings\n    });\n  } catch (error) {\n    dispatch({\n      type: ADMIN_BOOKINGS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const deleteBooking = id => async dispatch => {\n  try {\n    dispatch({\n      type: DELETE_BOOKING_REQUEST\n    });\n    const {\n      data\n    } = await axios.delete(`/api/admin/bookings/${id}`);\n    dispatch({\n      type: DELETE_BOOKING_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_BOOKING_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const getBookingDetails = (authCookie, req, id) => async dispatch => {\n  try {\n    const {\n      origin\n    } = absoluteUrl(req);\n    const config = {\n      headers: {\n        cookie: authCookie\n      }\n    };\n    const {\n      data\n    } = await axios.get(`${origin}/api/bookings/${id}`, config);\n    dispatch({\n      type: BOOKING_DETAILS_SUCCESS,\n      payload: data.booking\n    });\n  } catch (error) {\n    dispatch({\n      type: BOOKING_DETAILS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Clear Errors\n\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":null,"metadata":{},"sourceType":"module"}